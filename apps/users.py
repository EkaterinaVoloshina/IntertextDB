import streamlit as st
import streamlit_authenticator as stauth
import pymongo

names = ['–ö–∞—Ç—è –¢–∞–∫—Ç–∞—à–µ–≤–∞', '–ö–∞—Ç—è –í–æ–ª–æ—à–∏–Ω–∞']
usernames = ['tak_ty', 'vokat']
passwords = ['123', '456']
hashed_passwords = stauth.Hasher(passwords).generate()
authenticator = stauth.Authenticate(names, usernames, hashed_passwords,
    'some_cookie_name', 'some_signature_key', cookie_expiry_days=30)

def init_connection():
    return pymongo.MongoClient(st.secrets["mongo"]["key"])


def app():
    name, authentication_status, username = authenticator.login('Login', 'main')
    if authentication_status:
        st.write('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, *%s*' % name)
        col1, col2 = st.columns([1, 8])
        with col2:
            st.header('–†–µ–¥–∞–∫—Ç–æ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö')
        with col1:
            st.markdown(
                "<h1 style='text-align: center; font-size: 300%'>üíª</h1>",
                unsafe_allow_html=True)

        client = init_connection()
        db = client.intertext

        todo = st.selectbox('–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', ['—É–¥–∞–ª–∏—Ç—å', '–¥–æ–±–∞–≤–∏—Ç—å', '—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'])

        if todo == '—É–¥–∞–ª–∏—Ç—å':
            st.subheader('–£–¥–∞–ª–∏—Ç—å')
            st.text('–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –Ω—É–∂–Ω—ã–µ –≤–∞–º –∑–Ω–∞—á–µ–Ω–∏ –∏–∑ –±–∞–∑—ã')

            todelete = st.selectbox('–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å?', ['–ø–æ—ç—Ç–∞', '—Å–±–æ—Ä–Ω–∏–∫', '–ø–æ—ç–º—É', '–æ—Ç—Å—ã–ª–∫—É'])

            if todelete == '–ø–æ—ç—Ç–∞':
                author = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—ç—Ç–∞', db.authors.find().distinct("name"))
                button = st.button('–£–¥–∞–ª–∏—Ç—å', key='1')
                if button:
                    author_id = db.authors.find_one({'name': author})
                    if 'books' in author_id:
                        books = author_id['books']
                        db.books.delete_many({"_id": {"$in": books}})
                    if 'poems' in author_id:
                        poems = author_id['poems']
                        db.references.delete_many({'poem': {"$in": poems}})
                        db.poems.delete_many({"_id": {"$in": poems}})
                    db.authors.delete_one({"_id": author_id['_id']})
                    st.info(f'–ê–≤—Ç–æ—Ä {author} —É–¥–∞–ª–µ–Ω')
            elif todelete == '—Å–±–æ—Ä–Ω–∏–∫':
                book_name = st.selectbox(–í—ã–±–µ—Ä–∏—Ç–µ —Å–±–æ—Ä–Ω–∏–∫', db.books.find().distinct("book_name"))
                button = st.button('–£–¥–∞–ª–∏—Ç—å', key='1')
                if button:
                    book_id = db.books.find_one({'book_name': book_name})
                    poems = list(map(
                        lambda x: x['_id'],
                        db.poems.find({"book": book_id['_id']}, {'_id': True}))
                    )
                    db.books.delete_one({"_id": book_id['_id']})
                    db.poems.delete_many({"_id": {"$in": poems}})
                    db.references.delete_many({'book': book_id['_id']})
                    st.info(f'–°–±–æ—Ä–Ω–∏–∫ {book_name} —É–¥–∞–ª–µ–Ω')
            elif todelete == '–ø–æ—ç–º—É':
                poem_name = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—ç–º—É', db.poems.find().distinct("poem_name"))
                button = st.button('–£–¥–∞–ª–∏—Ç—å', key='1')
                if button:
                    poem_id = db.poems.find_one({'poem_name': poem_name})
                    db.poems.delete_one({"_id": poem_id['_id']})
                    db.references.delete_many({'poem': poem_id['_id']})
                    st.info(f'–ü–æ—ç–º–∞ {poem_name} —É–¥–∞–ª–µ–Ω–∞')
            elif todelete == '–æ—Ç—Å—ã–ª–∫—É':
                reference = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–∫–æ–≥–æ –ø–æ—ç—Ç–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
                    db.references.find().distinct("person"))
                button = st.button('–£–¥–∞–ª–∏—Ç—å', key='1')
                if button:
                    db.references.delete_many({'person': reference})
                    st.info(f'–û—Ç—Å—ã–ª–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–∞ {reference} —É–¥–∞–ª–µ–Ω—ã')

        elif todo == '–¥–æ–±–∞–≤–∏—Ç—å':
            st.subheader('–î–æ–±–∞–≤–∏—Ç—å')
            st.text('–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –±–∞–∑—É')

            toadd = st.selectbox('–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å?',
                                 ['–ø–æ—ç—Ç–∞', 'c–±–æ—Ä–Ω–∏–∫', '–ø–æ—ç–º—É', '–æ—Ç—Å—ã–ª–∫—É'])
            if toadd == '–ø–æ—ç—Ç–∞':
                author = st.text_input(label='*–í–≤–µ–¥–∏—Ç–µ –∏–º—è:')
                col1, col2 = st.columns([5, 5])
                with col1:
                    year_born = st.text_input('*–ì–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è:')
                with col2:
                    year_dead = st.text_input('*–ì–æ–¥ —Å–º–µ—Ä—Ç–∏:')

                button = st.button('–î–æ–±–∞–≤–∏—Ç—å', key='1')
                if button:
                    if author == '' or year_born == '' or year_dead == '':
                        st.warning('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è')
                    else:
                        match = db.authors.find_one({
                            'name': author,
                            "year_born": int(year_born),
                            "year_deed": int(year_dead)
                        })
                        if match:
                            st.warning('–¢–∞–∫–æ–π –ø–æ—ç—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
                        else:
                            id = db.authors.insert_one({
                                "name": author,
                                "year_born": int(year_born),
                                "year_deed": int(year_dead)
                            }).inserted_id
                            st.info(f'–ü–æ—ç—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É! –ï–≥–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π id: {id}')
            elif toadd == '—Å–±–æ—Ä–Ω–∏–∫':
                book_name = st.text_input(label='*–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–±–æ—Ä–Ω–∏–∫–∞:')
                col1, col2 = st.columns([5, 5])
                with col1:
                    year_published = st.text_input('*–ì–æ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:')
                with col2:
                    publishing_company = st.text_input('*–ò–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ:')
                button = st.button('–î–æ–±–∞–≤–∏—Ç—å', key='1')
                if button:
                    if book_name == '' or year_published == '' or publishing_company == '':
                        st.warning('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è')
                    else:
                        match = db.books.find_one({
                            'book_name': book_name,
                            "year_published": int(year_published),
                            "publishing_company": publishing_company
                        })
                        if match:
                            st.warning('–¢–∞–∫–æ–π —Å–±–æ—Ä–Ω–∏–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
                        else:
                            id = db.books.insert_one({
                                'book_name': book_name,
                                "year_published": int(year_published),
                                "publishing_company": publishing_company
                            }).inserted_id
                            st.info(f'–°–±–æ—Ä–Ω–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É! –ï–≥–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π id: {id}')
            elif toadd == '–ø–æ—ç–º—É':
                author = st.selectbox('*–ê–≤—Ç–æ—Ä:', db.authors.find().distinct("name"))
                col1, col2 = st.columns([5, 5])
                with col1:
                    poem_name = st.text_input('*–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—ç–º—ã:')
                with col2:
                    poem_name_2 = st.text_input('–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:')
                book_name = st.selectbox('*–ù–∞–∑–≤–∞–Ω–∏–µ —Å–±–æ—Ä–Ω–∏–∫–∞:', db.books.find().distinct("book_name"))
                poem_text = st.text_input('*–¢–µ–∫—Å—Ç –ø–æ—ç–º—ã:')
                st.text('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏')
                comment_author = st.text_input('*–ê–≤—Ç–æ—Ä –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:')
                comment_text = st.text_input('*–¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è')
                button = st.button('–î–æ–±–∞–≤–∏—Ç—å', key='1')
                if button:
                    if author == '' or poem_name == ''\
                            or book_name == '' or poem_text == '' \
                            or comment_author == '' or comment_text == '':
                        st.warning('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è')
                    else:
                        author_id = db.authors.find_one({'name': author})['_id']
                        match = db.poems.find_one({
                            'poem_name': poem_name,
                            "author": author_id,
                        })
                        if match:
                            st.warning('–¢–∞–∫–∞—è –ø–æ—ç–º–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
                        else:
                            book_id = db.books.find_one({'book_name': book_name})['_id']
                            id = db.poems.insert_one({
                                "author": author_id,
                                "poem_name": poem_name,
                                "poem_name_2": poem_name_2 if poem_name_2 else poem_name,
                                "text": poem_text,
                                "book": book_id,
                                "comment": {"author": comment_author, 'text': comment_text}
                            }).inserted_id
                            st.info(f'–ü–æ—ç–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É! –ï—ë —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π id: {id}')
            elif toadd == '–æ—Ç—Å—ã–ª–∫—É':
                poem = st.selectbox('*–ü–æ—ç–º–∞:', db.poems.find().distinct("poem_name"))
                person = st.text_input('*–ù–∞ –∫–æ–≥–æ –æ—Ç—Å—ã–ª–∫–∞:')
                col1, col2 = st.columns([5, 5])
                with col1:
                    start = st.text_input('*–ù–∞—á–∞–ª–æ –æ—Ç—Å—ã–ª–∫–∏:')
                with col2:
                    finish = st.text_input('*–ö–æ–Ω–µ—Ü –æ—Ç—Å—ã–ª–∫–∏:')
                wiki_id = st.text_input('WikiDataID:')
                button = st.button('–î–æ–±–∞–≤–∏—Ç—å', key='1')
                if button:
                    if poem == '' or person == ''\
                            or start == '' or finish == '':
                        st.warning('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è')
                    else:
                        poem_id = db.poems.find_one({'poem_name': poem})['_id']
                        match = db.references.find_one({
                            'poem': poem_id,
                            "person": person,
                            "start": int(start),
                            "finish": int(finish)
                        })
                        if match:
                            st.warning('–¢–∞–∫–∞—è –ø–æ—ç–º–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
                        else:
                            id = db.references.insert_one({
                                'poem': poem_id,
                                "person": person,
                                "start": int(start),
                                "finish": int(finish),
                                "wiki_id": wiki_id
                            }).inserted_id
                            st.info(f'–û—Ç—Å—ã–ª–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É! –ï—ë —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π id: {id}')

        elif todo == '—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
            st.subheader('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å')
            st.text('–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É –¥–æ–∫—É–º–µ–Ω—Ç—ã.')
            st.text('–ï—Å–ª–∏ –≤—ã –Ω–µ —Ö–æ—Ç–∏—Ç–µ –º–µ–Ω—è—Ç—å –∞—Ç—Ä–∏–±—É—Ç, –æ—Å—Ç–∞–≤—å—Ç–µ –ø–æ–ª–µ –ø—É—Å—Ç—ã–º.')

            tochange = st.selectbox('–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?',
                                 ['–ø–æ—ç—Ç–∞', 'c–±–æ—Ä–Ω–∏–∫', '–ø–æ—ç–º—É'])

            if tochange == '–ø–æ—ç—Ç–∞':
                author = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—ç—Ç–∞', db.authors.find().distinct("name"))
                st.markdown('---')
                new_name = st.text_input('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:')
                col1, col2 = st.columns([5, 5])
                with col1:
                    year_born = st.text_input('–ì–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è:')
                with col2:
                    year_dead = st.text_input('–ì–æ–¥ —Å–º–µ—Ä—Ç–∏:')

                button = st.button('–ò–∑–º–µ–Ω–∏—Ç—å', key='1')
                if button:
                    query = {"$set": {}}
                    if new_name != '':
                        query['$set'].update({"name": new_name})
                    if year_born != '':
                        query['$set'].update({"year_born": int(year_born)})
                    if year_dead != '':
                        query['$set'].update({"year_dead": int(year_dead)})
                    if len(query["$set"]) != 0:
                        db.authors.update_one({"name": author}, query)
                        st.info(f"""–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—ç—Ç–µ "{author}" –∏–∑–º–µ–Ω–µ–Ω–∞""")
                    else:
                        st.info("–ù–µ—á–µ–≥–æ –º–µ–Ω—è—Ç—å")

            elif tochange == '—Å–±–æ—Ä–Ω–∏–∫':
                book_name = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Å–±–æ—Ä–Ω–∏–∫', db.books.find().distinct("book_name"))
                st.markdown('---')
                new_name = st.text_input('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:')
                col1, col2 = st.columns([5, 5])
                with col1:
                    year_published = st.text_input('–ì–æ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:')
                with col2:
                    publishing_company = st.text_input('–ò–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ:')
                button = st.button('–ò–∑–º–µ–Ω–∏—Ç—å', key='1')
                if button:
                    query = {"$set": {}}
                    if new_name != '':
                        query["$set"].update({"book_name": new_name})
                    if year_published != '':
                        query["$set"].update({"year_published": year_published})
                    if publishing_company != '':
                        query["$set"].update({"publishing_company": publishing_company})
                    if len(query["$set"]) != 0:
                        db.books.update_one({"book_name": book_name}, query)
                        st.info(f"""–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–±–æ—Ä–Ω–∏–∫–µ "{book_name}" –∏–∑–º–µ–Ω–µ–Ω–∞""")
                    else:
                        st.info("–ù–µ—á–µ–≥–æ –º–µ–Ω—è—Ç—å")

            elif tochange == '–ø–æ—ç–º—É':
                poem_name = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—ç–º—É', db.poems.find().distinct("poem_name"))
                st.markdown('---')
                poem = db.poems.find_one({"poem_name": poem_name})
                author_id = poem['author']
                author_id = db.authors.find_one({"_id": author_id})
                authors = db.authors.find().distinct("name")
                author = st.selectbox('–ò–º—è –∞–≤—Ç–æ—Ä–∞:', authors, authors.index(author_id['name']))
                col1, col2 = st.columns([5, 5])
                with col1:
                    new_poem_name = st.text_input('–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—ç–º—ã:')
                with col2:
                    poem_name_2 = st.text_input('–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:')
                books = db.books.find().distinct("book_name")
                book_id = poem['book']
                book_id = db.books.find_one({"_id": book_id})
                book_name = st.selectbox('–ù–∞–∑–≤–∞–Ω–∏–µ —Å–±–æ—Ä–Ω–∏–∫–∞:', books,
                                         index=books.index(book_id['book_name']))
                poem_text = st.text_input('–¢–µ–∫—Å—Ç –ø–æ—ç–º—ã:')
                st.text('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏')
                comment_author = st.text_input('–ê–≤—Ç–æ—Ä –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:')
                comment_text = st.text_input('–¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è')
                button = st.button('–ò–∑–º–µ–Ω–∏—Ç—å', key='1')
                if button:
                    query = {"$set": {}}
                    if author != author_id['name']:
                        query["$set"].update({"author": db.authors.find_one({'name': author})['_id']})
                    if new_poem_name != '':
                        query["$set"].update({"poem_name": new_poem_name})
                    if poem_name_2 != '':
                        query["$set"].update({'poem_name_2': poem_name_2})
                    if book_name != book_id['book_name']:
                        query["$set"].update({'book': db.books.find_one({"book_name": book_name})['_id']})
                    if poem_text != '':
                        query["$set"].update({'text': poem_text})
                    comment = {'comment': {}}
                    if comment_author != '':
                        comment['comment'].update({'author': comment_author})
                    if comment_text != '':
                        comment['comment'].update({'text': comment_text})
                    if len(comment['comment']) != 0:
                        query["$set"].update(comment)
                    if len(query["$set"]) != 0:
                        db.poems.update_one({"poem_name": poem_name}, query)
                        st.info(f"""–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—ç–º–µ "{poem_name}" –∏–∑–º–µ–Ω–µ–Ω–∞""")
                    else:
                        st.info("–ù–µ—á–µ–≥–æ –º–µ–Ω—è—Ç—å")
    elif authentication_status == False:
        st.error('Username/password is incorrect')
    elif authentication_status == None:
        st.warning('Please enter your username and password')
